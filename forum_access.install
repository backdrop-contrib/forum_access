<?php

/**
 * @file
 * Install, update and uninstall functions for the forum_access module.
 *
 */

/**
 * Implements hook_install().
 */
function forum_access_install() {
  db_update('system')
    ->fields(array('weight' => 2))
    ->condition('name', 'forum_access')
    ->execute();

  if ($vid = config_get('forum.settings', 'forum_nav_vocabulary')) {
    $result = db_query("SELECT t.tid FROM {taxonomy_term_data} t LEFT JOIN {forum_access} fa ON t.tid = fa.tid WHERE fa.tid IS NULL AND t.vocabulary = :vid", array(
      ':vid' => $vid,
    ));
    $grant_create_by_rid = array(
      BACKDROP_ANONYMOUS_ROLE => 0,
      BACKDROP_AUTHENTICATED_ROLE => 1,
    );
    foreach ($result as $td) {
      foreach ($grant_create_by_rid as $rid => $grant_create) {
        db_insert('forum_access')
          ->fields(array(
          'tid' => $td->tid,
          'rid' => $rid,
          'grant_view' => 1,
          'grant_update' => 0,
          'grant_delete' => 0,
          'grant_create' => $grant_create,
          'priority' => 0,
        ))
          ->execute();
      }
    }
  }
  // Dynamically generated variable data was detected on the following lines.
  // /forum_access/forum_access.admin.inc line 58
  // /forum_access/forum_access.node.inc line 64
  // /forum_access/forum_access.node.inc line 160
  // /forum_access/forum_access.node.inc line 212
}

/**
 * Implements hook_schema().
 */
function forum_access_schema() {
  $schema['forum_access'] = array(
    'description' => 'The Forum Access control table.',
    'fields' => array(
      'tid' => array(
        'description' => 'The {taxonomy_term_data}.tid to which this {forum_access} entry applies.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'rid' => array(
        'description' => 'The {role}.rid to which this {forum_access} entry applies.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'grant_view' => array(
        'description' => 'Whether to grant "view" permission.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'grant_update' => array(
        'description' => 'Whether to grant "update" permission.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'grant_delete' => array(
        'description' => 'Whether to grant "delete" permission.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'grant_create' => array(
        'description' => 'Whether to grant "create" permission.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'priority' => array(
        'description' => 'The priority of this grant.',
        'type' => 'int',
        'size' => 'small',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('tid', 'rid'),
    'indexes' => array('rid' => array('rid')),
    'foreign keys' => array(
      'tid' => array('taxonomy_term_data' => 'tid'),
      'rid' => array('role' => 'rid'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_enable().
 */
function forum_access_enable() {
  config_clear('forum_access.settings', 'forum_access_rids'); // clear cache
  _forum_access_update_table();
}

/**
 * Adds missing default records to the {forum_acces} table.
 */
function _forum_access_update_table() {
  $tids = db_query("SELECT td.tid FROM {taxonomy_term_data} td LEFT JOIN {forum_access} fa ON td.tid = fa.tid WHERE td.vocabulary = :vid AND fa.tid IS NULL", array(
    'vid' => _forum_access_get_vid(),
  ))->fetchCol();
  foreach ($tids as $tid) {
    $record = array(
      'tid' => $tid,
      'rid' => BACKDROP_ANONYMOUS_ROLE,
      'grant_view' => 1,
    );
    backdrop_write_record('forum_access', $record);
    $record['rid'] = BACKDROP_AUTHENTICATED_ROLE;
    $record['grant_create'] = 1;
    backdrop_write_record('forum_access', $record);
  }
}

/**
 * Implements hook_disable().
 */
function forum_access_disable() {
  forum_access_enabled(FALSE);
}

/*
 * Implements hook_uninstall().
 */
function forum_access_uninstall() {

}

/**
 * Implements hook_update_last_removed().
 */
function forum_access_update_last_removed() {
  return 7002;
}

/**
 * Drop tid index and add primary key to forum_access table.
 * Remove unused setting.
 */
function forum_access_update_1100() {
  db_drop_index('forum_access', 'tid');
  db_add_primary_key('forum_access', array('tid', 'rid'));
  config_clear('forum_access.settings', 'forum_access_moderator_rid');
}
